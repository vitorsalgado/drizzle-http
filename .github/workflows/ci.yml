name: CI

on:
  push:
    branches:
      - main
      - '[0-9]+.x'
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  build:
    name: Node on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Deps
        run: |
          npm i
          npm run bootstrap

      - name: Lint
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm run lint
          npm run prettier:ci

      - name: Build
        run: |
          npm run build

      - name: Test
        run: |
          npm run test:ci

      - name: Coverage
        uses: codecov/codecov-action@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Deps
        run: |
          npm i
          npm run bootstrap

      - name: Build
        run: |
          npm run build

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm run packaging:publish

      - name: Latest Changelog
        run: |
          diff --changed-group-format='%>' --unchanged-group-format='' <( git show HEAD~1:CHANGELOG.md ) CHANGELOG.md > CHANGELOG_LATEST.md || true

      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG_LATEST.md
          draft: false
          prerelease: contains(github.ref, '-rc')

  automerge:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
