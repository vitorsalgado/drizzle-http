name: ci

on:
  push:
    branches:
      - main
      - '[0-9]+.x'
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

env:
  CI: true

jobs:
  dependabot-fixer:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Get Commit Message
        run: |
          echo "GIT_PRIOR_COMMIT=$(git log -1 --pretty=format:"%s")" >> $GITHUB_ENV

      - name: Rollback Yarn Lock
        run: |
          git checkout $(git log -n1 --skip 1 --oneline yarn.lock | awk '{print $1;}') -- yarn.lock
          yarn

      - name: Deps Autofix
        run: |
          PKG=$(yarn deps-utils pkg)
          FROM=$(yarn deps-utils from)
          TO=$(yarn deps-utils to)
          TYPE_AND_SCOPE=$(yarn deps-utils type)

          echo "Update will be: $PKG from $FROM to $TO"

          yarn up "$PKG@^$TO"
          yarn

          git add yarn.lock package.json
          git commit -m "$TYPE_AND_SCOPE: fix bump $PKG from $FROM to $TO"

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Get Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-

      - name: Deps
        run: |
          yarn --immutable

      - name: Lint
        run: |
          yarn lint
          yarn prettier:ci

  build:
    name: Node v${{ matrix.node_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        node_version: [ 12.x, 14.x ]
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}

      - name: Get Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-

      - name: Deps
        run: |
          yarn --immutable

      - name: Test
        run: |
          yarn test:ci
          yarn coverage:upload
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - lint
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          node-version: 14.x
          registry-url: 'https://registry.npmjs.org'

      - name: Get Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-

      - name: Deps
        run: |
          yarn --immutable

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn pkg:publish

      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: contains(github.ref, '-rc')

  automerge:
    runs-on: ubuntu-latest
    needs:
      - dependabot-fixer
      - lint
      - build

    steps:
      - uses: fastify/github-action-merge-dependabot@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
