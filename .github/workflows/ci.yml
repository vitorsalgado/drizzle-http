name: ci

on:
  push:
    branches:
      - main
      - '[0-9]+.x'
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

env:
  CI: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Node Version
        id: node-version
        run: |
          echo "::set-output name=version::$(node --version)"

      - name: Setup Yarn
        run: |
          yarn set version berry
          yarn --version

      - uses: actions/cache@v2
        with:
          path: './.yarn/cache'
          key: ${{ runner.os }}-${{ steps.node-version.outputs.version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.node-version.outputs.version }}-yarn-

      - name: Deps
        run: |
          yarn

      - run: |
          yarn lint
          yarn prettier:ci


  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        node-version: [ 12.x, 14.x ]
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Yarn
        run: |
          yarn set version berry
          yarn --version

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: './.yarn/cache'
          key: ${{ runner.os }}-${{matrix.node_version}}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.node_version}}-yarn-

      - name: Deps
        run: |
          yarn

      - name: Test
        run: |
          yarn test:ci
          yarn coverage:upload
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs:
      - lint
      - release

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: contains(github.ref, '-rc')
